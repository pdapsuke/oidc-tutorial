import{V as d,_ as f}from"./eHDmLPwA.js";import{d as m,r as _,L as h,o as k,m as a,M as g,A as w,q as y,t as x,z as T,x as C}from"./C_jhQE7w.js";import{u as P}from"./CfwDyyMM.js";import"./CjmHhaM3.js";const $=C("div",null,"Please wait...",-1),v=m({__name:"callback",setup(A){const r=_(null),s=h().query.code||"";s.toString();async function i(e){const c="http://localhost:8888/realms/oidc-tutorial/protocol/openid-connect/token",{clientId:n,redirectUri:l}=y().public,t=new URLSearchParams;t.append("grant_type","authorization_code"),t.append("code",e),t.append("client_id",`${n}`),t.append("redirect_uri",`${l}`);const p=o=>new Promise(u=>{setTimeout(u,o)});try{await p(5e3);const o=await fetch(c,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t.toString()});if(!o.ok)throw new Error("Failed to fetch access token");return o.json()}catch(o){r.value.error(`Error fetching access token: ${o}`),console.error("Error fetching access token:",o)}}return k(()=>{i(`${s}`).then(e=>{e?(console.log(e),P().login(e.access_token,e.refresh_token),a("/")):setTimeout(()=>{a("/login")},2e3)})}),(e,c)=>{const n=f;return x(),g(d,{class:"py-8 px-6 fillheight",fluid:""},{default:w(()=>[T(n,{ref_key:"alert",ref:r},null,512),$]),_:1})}}});export{v as default};
